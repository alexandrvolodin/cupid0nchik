version: '3.8'

services:
  user-details-db:
    image: postgres:16.2
    container_name: user-details-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: cupid-meet-user-details
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      # POSTGRES_MULTIPLE_DATABASES: cupid-meet-user-details,keycloak # УДАЛЕНО!
    volumes:
      - user-details-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d cupid-meet-user-details" ] # Проверяем только свою БД
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s # Можно немного уменьшить, т.к. только одна БД
    restart: always

  keycloak-db: # НОВЫЙ СЕРВИС ДЛЯ БАЗЫ ДАННЫХ KEYCLOAK
    image: postgres:16.2
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak # Специально для Keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data # Отдельный том
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d keycloak" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s # Даем время на инициализацию
    restart: always

  user-details-service-app:
    build: .
    container_name: user-details-service-app
    ports:
      - "8728:8728"
      - "8091:8090"
    environment:
      DB_HOST: user-details-db
      DB_PORT: 5432
      DB_NAME: cupid-meet-user-details
      DB_USER: postgres
      DB_PASSWORD: postgres
      KEYCLOAK_JWK_URI: http://keycloak-server:8080/realms/cupid-meet-dev/protocol/openid-connect/certs # Изменил хост на keycloak-server
      KEYCLOAK_SERVER_URL: http://keycloak-server:8080/auth # Изменил хост на keycloak-server
      KEYCLOAK_REALM: cupid-meet-dev
      KEYCLOAK_CLIENT: cupid-meet-dev
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:8728,http://localhost:8080
    depends_on:
      user-details-db:
        condition: service_healthy
      keycloak:
        condition: service_started
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    container_name: keycloak-server
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak # ИЗМЕНЕНО: теперь подключается к новому сервису keycloak-db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_HTTP_PORT: 8080
      KC_HOSTNAME: localhost
      KC_DB_URL_PROPERTIES: "reconnect=true&reconnectInterval=10"
    volumes:
      - ../config/keycloak/realms/realm-export.json:/opt/keycloak/data/import/realm-import.json
      - keycloak-data:/opt/keycloak/data
    depends_on:
      keycloak-db: # Keycloak теперь зависит от своего собственного DB-сервиса
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/realms/master || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    restart: always
    command: start-dev --import-realm

volumes:
  user-details-db-data:
  keycloak-db-data: # НОВЫЙ ТОМ
  keycloak-data: